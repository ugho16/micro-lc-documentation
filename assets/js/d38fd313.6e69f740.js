"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3858],{5858:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>m});var a=t(6687);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},i=Object.keys(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var s=a.createContext({}),p=function(n){var e=a.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},c=function(n){var e=p(n.components);return a.createElement(s.Provider,{value:e},n.children)},u={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,i=n.originalType,s=n.parentName,c=l(n,["components","mdxType","originalType","parentName"]),d=p(t),m=r,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return t?a.createElement(g,o(o({ref:e},c),{},{components:t})):a.createElement(g,o({ref:e},c))}));function m(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=n,l.mdxType="string"==typeof n?n:r,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4005:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var a=t(6428),r=t(8920),i=(t(6687),t(5858)),o=["components"],l={id:"general_configuration",title:"General configuration",sidebar_label:"General configuration"},s=void 0,p={unversionedId:"docs/general_configuration",id:"version-1.0.0/docs/general_configuration",title:"General configuration",description:"micro-lc provides an API that can be used by your plugins to retrieve its dynamic configuration expressed in JSON format.",source:"@site/versioned_docs/version-1.0.0/docs/general_configuration.md",sourceDirName:"docs",slug:"/docs/general_configuration",permalink:"/documentation/1.0.0/docs/general_configuration",draft:!1,editUrl:"https://github.com/micro-lc/documentation/edit/main/versioned_docs/version-1.0.0/docs/general_configuration.md",tags:[],version:"1.0.0",lastUpdatedBy:"epessina",frontMatter:{id:"general_configuration",title:"General configuration",sidebar_label:"General configuration"},sidebar:"docs",previous:{title:"Core configuration",permalink:"/documentation/1.0.0/docs/core_configuration"},next:{title:"Plugin configuration",permalink:"/documentation/1.0.0/docs/plugin_configuration"}},c={},u=[{value:"Configuration structure",id:"configuration-structure",level:2},{value:"Referenced configuration",id:"referenced-configuration",level:3},{value:"Example",id:"example",level:4},{value:"ACL",id:"acl",level:3}],d={toc:u};function m(n){var e=n.components,t=(0,r.Z)(n,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"micro-lc")," provides an API that can be used by your plugins to retrieve its dynamic configuration expressed in ",(0,i.kt)("inlineCode",{parentName:"p"},"JSON")," format."),(0,i.kt)("p",null,"All these configurations must be stored in the same path, defined by the ",(0,i.kt)("inlineCode",{parentName:"p"},"PLUGINS_CONFIGURATIONS_PATH")," environment variable."),(0,i.kt)("p",null,"To retrieve the configuration, you can perform a GET request to ",(0,i.kt)("inlineCode",{parentName:"p"},"/api/v1/microlc/configuration/:configurationName"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"configurationName"),"\nis the name of the ",(0,i.kt)("inlineCode",{parentName:"p"},"JSON")," file that is stored in the path ",(0,i.kt)("inlineCode",{parentName:"p"},"${PLUGINS_CONFIGURATIONS_PATH}/${configurationName}.json"),"."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"For example, if you:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"set ",(0,i.kt)("inlineCode",{parentName:"li"},"PLUGINS_CONFIGURATIONS_PATH")," as ",(0,i.kt)("inlineCode",{parentName:"li"},"/microlc-be"),";"),(0,i.kt)("li",{parentName:"ul"},"create a file in ",(0,i.kt)("inlineCode",{parentName:"li"},"/microlc-be/backoffice.json"),".")),(0,i.kt)("p",{parentName:"admonition"},"You can then retrieve its content with the GET request ",(0,i.kt)("inlineCode",{parentName:"p"},"/api/v1/microlc/configuration/backoffice"),".")),(0,i.kt)("h2",{id:"configuration-structure"},"Configuration structure"),(0,i.kt)("p",null,"The general configuration endpoint supports two kinds of configuration structure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#referenced-configuration"},"referenced"),": the configuration is a referenced template that is populated by the API at runtime;"),(0,i.kt)("li",{parentName:"ul"},"plain: the configuration is returned ",(0,i.kt)("strong",{parentName:"li"},"as-is"),". It can have any structure.")),(0,i.kt)("h3",{id:"referenced-configuration"},"Referenced configuration"),(0,i.kt)("p",null,"A referenced configuration has two root properties:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$ref"),": contains the object with the references to replace.",(0,i.kt)("br",{parentName:"li"}),"Its structure is: ",(0,i.kt)("inlineCode",{parentName:"li"},"<key referenced in the content>:<object to place in the content>"),";"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"content"),": the configuration content that must be replaced and returned.")),(0,i.kt)("h4",{id:"example"},"Example"),(0,i.kt)("p",null,"An example of referenced configuration can be the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"{3-58,123,150}","{3-58,123,150}":!0},'{\n  "$ref": {\n    "dataSchema": {\n      "type": "object",\n      "properties": {\n        "_id": {\n          "type": "string",\n          "visualizationOptions": {\n            "label": "ID"\n          }\n        },\n        "creatorId": {\n          "type": "string",\n          "visualizationOptions": {\n            "label": "Creator ID"\n          }\n        },\n        "createdAt": {\n          "type": "string",\n          "format": "date",\n          "visualizationOptions": {\n            "label": "Created At",\n            "dateOutputFormat": "MM/DD/YYYY HH:mm:ss"\n          }\n        },\n        "updaterId": {\n          "type": "string",\n          "visualizationOptions": {\n            "label": "Updater ID"\n          }\n        },\n        "updatedAt": {\n          "type": "string",\n          "format": "date",\n          "visualizationOptions": {\n            "label": "Updated At",\n            "dateOutputFormat": "MM/DD/YYYY HH:mm:ss"\n          }\n        },\n        "__STATE__": {\n          "type": "string",\n          "visualizationOptions": {\n            "label": "State",\n            "iconMap": {\n              "Published": {\n                "shape": "roundedSquare",\n                "color": "#52C41A"\n              },\n              "Draft": {\n                "shape": "roundedSquare",\n                "color": "#CDCDCE"\n              }\n            }\n          }\n        }\n      },\n      "required": []\n    }\n  },\n  "content": {\n    "type": "row",\n    "content": [\n      {\n        "type": "column",\n        "style": "justify-content: space-between;",\n        "content": [\n          {\n            "type": "column",\n            "style": "margin: 24px 0 24px 56px;",\n            "content": [\n              {\n                "type": "element",\n                "tag": "bk-search-bar",\n                "style": "margin-right: 25px;",\n                "config": {\n                  "placeholder": "Search..."\n                }\n              },\n              {\n                "type": "element",\n                "tag": "bk-refresh-button",\n                "style": "margin-left: 25px; display: flex; align-items: center;"\n              }\n            ]\n          },\n          {\n            "type": "element",\n            "tag": "bk-add-new-button",\n            "style": "margin: 24px 56px 24px 0;"\n          }\n        ]\n      },\n      {\n        "type": "element",\n        "tag": "bk-tabs",\n        "style": "margin-left:0;",\n        "config": {\n          "allTabQuery": "",\n          "archivedTabQuery": "__STATE__:DRAFT",\n          "customTabs": [\n            {\n              "id": "custom-tab",\n              "query": "__STATE__:PUBLIC",\n              "title": "Public"\n            }\n          ]\n        }\n      },\n      {\n        "type": "row",\n        "style": "justify-content: space-between; height: 77vh",\n        "content": [\n          {\n            "type": "row",\n            "style": "background-color: #c2c2c2; padding: 10px; height: 100%",\n            "content": [\n              {\n                "type": "element",\n                "tag": "bk-table",\n                "url": "/back-kit/bk-web-components.esm.js",\n                "config": {\n                  "dataSchema": {\n                    "$ref": "dataSchema"\n                  }\n                }\n              }\n            ]\n          },\n          {\n            "type": "column",\n            "content": [\n              {\n                "type": "element",\n                "tag": "bk-footer"\n              },\n              {\n                "type": "element",\n                "tag": "bk-pagination"\n              }\n            ],\n            "style": "justify-content: space-between; padding: 16px 16px 0;"\n          }\n        ]\n      },\n      {\n        "type": "element",\n        "tag": "crud-client",\n        "config": {\n          "basePath": "/v2/test",\n          "$ref": "dataSchema"\n        }\n      }\n    ]\n  }\n}\n')),(0,i.kt)("p",null,"After processing, the resulting configuration will be:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"{51-105,124-178}","{51-105,124-178}":!0},'{\n    "type": "row",\n    "content": [{\n        "type": "column",\n        "style": "justify-content: space-between;",\n        "content": [{\n            "type": "column",\n            "style": "margin: 24px 0 24px 56px;",\n            "content": [{\n                "type": "element",\n                "tag": "bk-search-bar",\n                "style": "margin-right: 25px;",\n                "config": {\n                    "placeholder": "Search..."\n                }\n            }, {\n                "type": "element",\n                "tag": "bk-refresh-button",\n                "style": "margin-left: 25px; display: flex; align-items: center;"\n            }]\n        }, {\n            "type": "element",\n            "tag": "bk-add-new-button",\n            "style": "margin: 24px 56px 24px 0;"\n        }]\n    }, {\n        "type": "element",\n        "tag": "bk-tabs",\n        "style": "margin-left:0;",\n        "config": {\n            "allTabQuery": "",\n            "archivedTabQuery": "__STATE__:DRAFT",\n            "customTabs": [{\n                "id": "custom-tab",\n                "query": "__STATE__:PUBLIC",\n                "title": "Public"\n            }]\n        }\n    }, {\n        "type": "row",\n        "style": "justify-content: space-between; height: 77vh",\n        "content": [{\n            "type": "row",\n            "style": "background-color: #c2c2c2; padding: 10px; height: 100%",\n            "content": [{\n                "type": "element",\n                "tag": "bk-table",\n                "url": "/back-kit/bk-web-components.esm.js",\n                "config": {\n                    "dataSchema": {\n                        "type": "object",\n                        "properties": {\n                            "_id": {\n                                "type": "string",\n                                "visualizationOptions": {\n                                    "label": "ID"\n                                }\n                            },\n                            "creatorId": {\n                                "type": "string",\n                                "visualizationOptions": {\n                                    "label": "Creator ID"\n                                }\n                            },\n                            "createdAt": {\n                                "type": "string",\n                                "format": "date",\n                                "visualizationOptions": {\n                                    "label": "Created At",\n                                    "dateOutputFormat": "MM/DD/YYYY HH:mm:ss"\n                                }\n                            },\n                            "updaterId": {\n                                "type": "string",\n                                "visualizationOptions": {\n                                    "label": "Updater ID"\n                                }\n                            },\n                            "updatedAt": {\n                                "type": "string",\n                                "format": "date",\n                                "visualizationOptions": {\n                                    "label": "Updated At",\n                                    "dateOutputFormat": "MM/DD/YYYY HH:mm:ss"\n                                }\n                            },\n                            "__STATE__": {\n                                "type": "string",\n                                "visualizationOptions": {\n                                    "label": "State",\n                                    "iconMap": {\n                                        "Published": {\n                                            "shape": "roundedSquare",\n                                            "color": "#52C41A"\n                                        },\n                                        "Draft": {\n                                            "shape": "roundedSquare",\n                                            "color": "#CDCDCE"\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        "required": []\n                    }\n                }\n            }]\n        }, {\n            "type": "column",\n            "content": [{\n                "type": "element",\n                "tag": "bk-footer"\n            }, {\n                "type": "element",\n                "tag": "bk-pagination"\n            }],\n            "style": "justify-content: space-between; padding: 16px 16px 0;"\n        }]\n    }, {\n        "type": "element",\n        "tag": "crud-client",\n        "config": {\n            "basePath": "/v2/test",\n            "type": "object",\n            "properties": {\n                "_id": {\n                    "type": "string",\n                    "visualizationOptions": {\n                        "label": "ID"\n                    }\n                },\n                "creatorId": {\n                    "type": "string",\n                    "visualizationOptions": {\n                        "label": "Creator ID"\n                    }\n                },\n                "createdAt": {\n                    "type": "string",\n                    "format": "date",\n                    "visualizationOptions": {\n                        "label": "Created At",\n                        "dateOutputFormat": "MM/DD/YYYY HH:mm:ss"\n                    }\n                },\n                "updaterId": {\n                    "type": "string",\n                    "visualizationOptions": {\n                        "label": "Updater ID"\n                    }\n                },\n                "updatedAt": {\n                    "type": "string",\n                    "format": "date",\n                    "visualizationOptions": {\n                        "label": "Updated At",\n                        "dateOutputFormat": "MM/DD/YYYY HH:mm:ss"\n                    }\n                },\n                "__STATE__": {\n                    "type": "string",\n                    "visualizationOptions": {\n                        "label": "State",\n                        "iconMap": {\n                            "Published": {\n                                "shape": "roundedSquare",\n                                "color": "#52C41A"\n                            },\n                            "Draft": {\n                                "shape": "roundedSquare",\n                                "color": "#CDCDCE"\n                            }\n                        }\n                    }\n                }\n            },\n            "required": []\n        }\n    }]\n}\n')),(0,i.kt)("h3",{id:"acl"},"ACL"),(0,i.kt)("p",null,"Both configuration structures support ACL using the ",(0,i.kt)("a",{parentName:"p",href:"/documentation/1.0.0/docs/core_configuration#aclexpression"},(0,i.kt)("inlineCode",{parentName:"a"},"aclExpression"))," property previously discussed."),(0,i.kt)("p",null,"For example, given this plain configuration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "acl": {\n    "nested": {\n      "aclExpression": "groups.admin && groups.ceo",\n      "object": {}\n    }\n  }\n}\n')),(0,i.kt)("p",null,"If the ",(0,i.kt)("inlineCode",{parentName:"p"},"aclExpression")," doesn't evaluate ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", the result will be:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "acl": {}\n}\n')),(0,i.kt)("p",null,"From version ",(0,i.kt)("inlineCode",{parentName:"p"},"0.9.0")," user's permissions on their own or can be used alongside the user's groups, both the following configurations are valid:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "groupsAndPermissionsAcl": {\n    "nested": {\n      "aclExpression": "groups.admin && permissions.companies.view",\n      "object": {}\n    }\n  },\n  "permissionsAcl": {\n    "nested": {\n      "aclExpression": "permissions.companies.view && permissions.companies.create",\n      "object": {}\n    }\n  },\n}\n')))}m.isMDXComponent=!0}}]);